<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>正则表达式 on Ionosphere</title>
    <link>https://blog.ionosphere.site/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
    <description>Recent content in 正则表达式 on Ionosphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 24 Apr 2021 21:27:56 +0800</lastBuildDate><atom:link href="https://blog.ionosphere.site/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>正则表达式常用规则</title>
      <link>https://blog.ionosphere.site/p/6de70ddc/</link>
      <pubDate>Sat, 24 Apr 2021 21:27:56 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/6de70ddc/</guid>
      <description>首先要明确一点，针对同一个场景的正则表达式并不是唯一的，只要结果正确即可，不要疑惑为什么自己写的正则跟别人的不一样
 匹配确定的值 值是什么表达式就是什么。
# 匹配字母‘A’ A 匹配一些值 用方括号将值包裹起来
# 匹配姓张的和姓王的 [张王]\w+ # 匹配数字 [0-9] # 匹配中文 [\u4e00-\u9fa5] # 区间取非 # ^只有在‘[]’中切紧跟在‘[’之后才表示取非 # 例：非数字 [^0-9]  元字符：有特殊含义的字符，比如在‘[]’中的连字符‘-’，表示取连字符左右两边值之间的内容。若要取元字符本身的含义，需要用转移字符‘\’进行转义。若用转义字符对普通字符转义，则普通字符将被理解成元字符，比如匹配换行符‘\n’。
 匹配所有值 英文句号.
匹配次数控制 匹配确定的次数 匹配一次 表达式默认匹配一次，不需要做任何特殊操作
匹配n次 表达式加‘{n}’
匹配m次到n次 表达式加‘{m,n}’
匹配不确定的次数 匹配1到多次 表达式加‘+’
# 匹配一组数字 \d+ 匹配0到多次 # 匹配0到多个字符 \w* 匹配0次或1次 表达式加‘?’
# 匹配网址 https?//[\w./]+ 边界 单词边界 \b
字符串边界 ^\w+$</description>
    </item>
    
  </channel>
</rss>
