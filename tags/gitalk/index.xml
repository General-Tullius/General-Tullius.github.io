<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gitalk on Ionosphere</title>
    <link>https://blog.ionosphere.site/tags/gitalk/</link>
    <description>Recent content in Gitalk on Ionosphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 20 Feb 2021 17:59:56 +0800</lastBuildDate><atom:link href="https://blog.ionosphere.site/tags/gitalk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gridea Gitalk 评论登录403问题</title>
      <link>https://blog.ionosphere.site/p/44c1c716/</link>
      <pubDate>Sat, 20 Feb 2021 17:59:56 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/44c1c716/</guid>
      <description>表象 成因 Gitalk默认的GitHub oauth请求反向代理CORS使用的是https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_tokenGitHub项目，该代理只是一个演示项目，由于被滥用，作者决定于2021年1月31日停止开放使用，从而导致了此问题的产生
解决  在Heroku上部署自己的cros-anywhere
   1.注册Heroku账号
  2.fork cros-anywhere项目
  3.创建Heroku应用
  4.将自己fork的项目部署创建的Heroku应用
官方文档 实际上自己通过网页端操作更方便点
  5.设置白名单防止滥用导致封号
  6.修改主题中Gitalk相关的代码 增加Gitalk反向代理配置项
  // 修改主题根目录下config.json文件，增加Gitalk反向代理自定义配置节点，用于自定义配置代理地址 { &amp;#34;customConfig&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;gitalkProxy&amp;#34;, &amp;#34;label&amp;#34;: &amp;#34;GitHub登陆&amp;#34;, &amp;#34;group&amp;#34;: &amp;#34;Gitalk&amp;#34;, //此处将地址配置成自己的代理服务器 &amp;#34;value&amp;#34;: &amp;#34;https://netnr-proxy.cloudno.de/https://github.com/login/oauth/access_token&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;input&amp;#34;, &amp;#34;note&amp;#34;: &amp;#34;GitHub验证&amp;#34; } ] } 修改Gitalk初始化代码templates/includes/gitalk.ejs
&amp;lt;script&amp;gt; window.onload = function() { var gitalk = new Gitalk({ //增加代理参数，赋值读取自定义配置  proxy: &amp;#39;&amp;lt;%= site.customConfig.gitalkProxy %&amp;gt;&amp;#39;, clientID: &amp;#39;&amp;lt;%= commentSetting.</description>
    </item>
    
  </channel>
</rss>
