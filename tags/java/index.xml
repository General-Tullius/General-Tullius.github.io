<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Ionosphere</title>
    <link>https://blog.ionosphere.site/tags/java/</link>
    <description>Recent content in Java on Ionosphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 29 Jun 2021 10:05:24 +0800</lastBuildDate><atom:link href="https://blog.ionosphere.site/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mybatis分页</title>
      <link>https://blog.ionosphere.site/p/3f80e875/</link>
      <pubDate>Tue, 29 Jun 2021 10:05:24 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/3f80e875/</guid>
      <description> 插件项目地址：Mybatis-PageHelper
 </description>
    </item>
    
    <item>
      <title>Java项目中的classpath是什么</title>
      <link>https://blog.ionosphere.site/p/139dc015/</link>
      <pubDate>Mon, 28 Jun 2021 11:49:22 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/139dc015/</guid>
      <description>什么是classpath 一般情况下基于Maven的Java项目开发阶段目录结构：
src -main –java java源代码文件 –resources 资源库，会自动复制到classes目录里 –filters 资源过滤文件 –webapp web应用的目录。WEB-INF、css、js等 –test –java 单元测试java源代码文件 –resources 测试需要用的资源库 –filters 测试资源过滤库 –assembly 组件的描述配置（如何打包） –it 集成测试(主要用于插件) –site Site（一些文档） target pom.xml maven的pom文件 LICENSE.txt Project’s license README.txt Project’s readme 发布后的目录结构：
jar -META-INF -BOOT-INF -classes -lib 其中开发时期的src/main/下面的java和resources文件夹都被打包到了生产包的BOOT-INF/classes/目录下，由maven引入的依赖都被放入到了BOOT-INF/lib/下面。classpath指的就是BOOT-INF目录下的classes文件夹。
classpath的作用 classpath一般用于指定配置或者资源的路径，比如在配置mybatis的Mapper.xml文件位置时：
classpath*:**/mapper/mapping/*Mapper.xml classpath*表示可以匹配多个文件，路径中的**表示在BOOT-INF/classes/下的任意下层目录。
测试 测试 测试 </description>
    </item>
    
    <item>
      <title>Java核心技术·卷I</title>
      <link>https://blog.ionosphere.site/p/a8e95393/</link>
      <pubDate>Thu, 04 Mar 2021 23:27:31 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/a8e95393/</guid>
      <description>开始系统的学习Java基础知识
 第1章 Java程序设计概述 Java发展简史    版本 年份 语言新特性 类与接口的数量     1.0 1996 语言本身 211   1.1 1997 内部类 477   1.2 1998 strictfp修饰符 1524   1.3 2000 无 1840   1.4 2002 断言 2723   5.0 2004 泛型类、“for each”循环、可变元参数、自动装箱、元数据、枚举、静态导入 3279   6 2006 无 3793   7 2011 基于字符串的switch、钻石操作符、二进制字面量、异常处理改进 4024   8 2014 lambda表达式、包含默认方法的接口、流和日期/时间库 4240    注：当前已发布到版本16</description>
    </item>
    
  </channel>
</rss>
