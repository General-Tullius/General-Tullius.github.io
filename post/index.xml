<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ionosphere</title>
    <link>http://blog.ionosphere.site/post/</link>
    <description>Recent content in Posts on Ionosphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 20 Feb 2021 17:59:56 +0800</lastBuildDate><atom:link href="http://blog.ionosphere.site/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gridea Gitalk 评论登录403问题</title>
      <link>http://blog.ionosphere.site/p/20210220175956/</link>
      <pubDate>Sat, 20 Feb 2021 17:59:56 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20210220175956/</guid>
      <description>表象 成因 Gitalk默认的GitHub oauth请求反向代理CORS使用的是https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_tokenGitHub项目，该代理只是一个演示项目，由于被滥用，作者决定于2021年1月31日停止开放使用，从而导致了此问题的产生
解决  在Heroku上部署自己的cros-anywhere
   1.注册Heroku账号
  2.fork cros-anywhere项目
  3.创建Heroku应用
  4.将自己fork的项目部署创建的Heroku应用
官方文档 实际上自己通过网页端操作更方便点
  5.设置白名单防止滥用导致封号
  6.修改主题中Gitalk相关的代码 增加Gitalk反向代理配置项
  // 修改主题根目录下config.json文件，增加Gitalk反向代理自定义配置节点，用于自定义配置代理地址 { &amp;#34;customConfig&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;gitalkProxy&amp;#34;, &amp;#34;label&amp;#34;: &amp;#34;GitHub登陆&amp;#34;, &amp;#34;group&amp;#34;: &amp;#34;Gitalk&amp;#34;, //此处将地址配置成自己的代理服务器 &amp;#34;value&amp;#34;: &amp;#34;https://netnr-proxy.cloudno.de/https://github.com/login/oauth/access_token&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;input&amp;#34;, &amp;#34;note&amp;#34;: &amp;#34;GitHub验证&amp;#34; } ] } 修改Gitalk初始化代码templates/includes/gitalk.ejs
&amp;lt;script&amp;gt; window.onload = function() { var gitalk = new Gitalk({ //增加代理参数，赋值读取自定义配置  proxy: &amp;#39;&amp;lt;%= site.customConfig.gitalkProxy %&amp;gt;&amp;#39;, clientID: &amp;#39;&amp;lt;%= commentSetting.</description>
    </item>
    
    <item>
      <title>Visual Studio_Code 使用问题记录</title>
      <link>http://blog.ionosphere.site/p/20210206131930/</link>
      <pubDate>Sat, 06 Feb 2021 13:19:30 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20210206131930/</guid>
      <description>Nuget包管理加载版本时报错 解决方案：
 打开.vscode/extensions/jmrog.vscode-nuget-package-manager-1.1.6/out/src/actions/add-methods/fetchPackageVersions.js， 修改代码 ...node_fetch_1.default(`${versionsUrl}${selectedPackageName.toLowerCase()}/index.json`, utils_1.getFetchOptions(vscode.workspace.getConfiguration(&amp;#39;http&amp;#39;)))   </description>
    </item>
    
    <item>
      <title>坐标系转换</title>
      <link>http://blog.ionosphere.site/p/20210205131342/</link>
      <pubDate>Fri, 05 Feb 2021 13:13:42 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20210205131342/</guid>
      <description>#!/usr/bin/python3 # -*- coding: utf-8 -*- import json import requests import math key = &amp;#39;your key here&amp;#39; # 这里填写你的百度开放平台的key x_pi = 3.14159265358979324 * 3000.0 / 180.0 pi = 3.1415926535897932384626 # π a = 6378245.0 # 长半轴 ee = 0.00669342162296594323 # 扁率 def geocode(address): &amp;#34;&amp;#34;&amp;#34; 利用百度geocoding服务解析地址获取位置坐标 :param address:需要解析的地址 :return: &amp;#34;&amp;#34;&amp;#34; geocoding = {&amp;#39;s&amp;#39;: &amp;#39;rsv3&amp;#39;, &amp;#39;key&amp;#39;: key, &amp;#39;city&amp;#39;: &amp;#39;全国&amp;#39;, &amp;#39;address&amp;#39;: address} res = requests.get( &amp;#34;http://restapi.amap.com/v3/geocode/geo&amp;#34;, params=geocoding) if res.status_code == 200: json = res.</description>
    </item>
    
    <item>
      <title>Github&#43;PicGo&#43;jsdeliver搭建图床</title>
      <link>http://blog.ionosphere.site/p/20210204170916/</link>
      <pubDate>Thu, 04 Feb 2021 17:09:16 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20210204170916/</guid>
      <description>步骤 整体逻辑：使用GitHub仓库作为存储空间，利用jsdeliver做CDN，利用PicGo做图片管理工具
Github设置  创建公开仓库 创建私人访问Token,并将Token记录下来   注意：Token需要有repo、delete_repo权限
 PicGo设置 配置如下
资源 PicGo jsDelivr</description>
    </item>
    
    <item>
      <title>Oracle定时备份</title>
      <link>http://blog.ionosphere.site/p/20201225143832/</link>
      <pubDate>Fri, 25 Dec 2020 14:38:32 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20201225143832/</guid>
      <description>转载自：Windows下Oracle定时备份(全量备份)
 关于Windows下oracle全量备份的文章，很多网站都有，写下本文不过是为了以后方便查找，不用再到处找。
以下些许内容有所参考到其他人所写内容，这里无意冒犯，本文引用内容部分会附上参考地址，还望原作者见谅。
备份脚本 新建txt文档，把脚本复制进去后改文件格式为bat文件，双击运行即可测试该脚本是否有误。
这里要说明一下，开始把脚本拿过来执行时，一直未能成功备份数据库
用bat的pause暂停调试发现了一些问题，有时不注意可能会在定义的变量如BACKUPDATE、USER等后面带了空格
这个时候问题就来了，导致参数的不正确，所以这里需注意！
@echo off echo ================================================ echo Windows环境下Oracle数据库的自动备份脚本 echo 1. 使用当前日期命名备份文件。 echo 2. 自动删除7天前的备份。 echo ================================================ echo 以“YYYYMMDD”格式取出当前时间。 set BACKUPDATE=%date:~0,4%%date:~5,2%%date:~8,2%%time:~0,2%%time:~3,2%%time:~6,2% echo 设置用户名、密码和要备份的数据库 set USER=ora_user set PASSWORD=ora_name set DATABASE=conn_db echo 创建备份目录 if not exist &amp;#34;E:\backup\data&amp;#34; mkdir E:\backup\data if not exist &amp;#34;E:\backup\log&amp;#34; mkdir E:\backup\log set DATADIR=E:\backup\data set LOGDIR=E:\backup\log exp %USER%/%PASSWORD%@%DATABASE% file=%DATADIR%\data_%BACKUPDATE%.dmp log=%LOGDIR%\log_%BACKUPDATE%.log echo 删除7天前的备份。 forfiles /p &amp;#34;%DATADIR%&amp;#34; /s /m *.* /d -7 /c &amp;#34;cmd /c del @path&amp;#34; forfiles /p &amp;#34;%LOGDIR%&amp;#34; /s /m *.</description>
    </item>
    
    <item>
      <title>文字转语音</title>
      <link>http://blog.ionosphere.site/p/20201006134854/</link>
      <pubDate>Tue, 06 Oct 2020 13:48:54 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20201006134854/</guid>
      <description># 文字转语音 say -f 1.txt -o 1.aiff say 你好 -o 你好.aiff # 音频格式转换 ffmpeg -f aiff -i 你好.aiff 你好.mp3 </description>
    </item>
    
    <item>
      <title>黑神话·悟空</title>
      <link>http://blog.ionosphere.site/p/20200820112607/</link>
      <pubDate>Thu, 20 Aug 2020 11:26:07 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20200820112607/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>今天天气很是不错...</title>
      <link>http://blog.ionosphere.site/p/20200806213501/</link>
      <pubDate>Thu, 06 Aug 2020 21:35:01 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20200806213501/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Homebrew</title>
      <link>http://blog.ionosphere.site/p/20200706134640/</link>
      <pubDate>Mon, 06 Jul 2020 13:46:40 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20200706134640/</guid>
      <description> Homebrew
 查看已安装的包 查看已经安装的包
brew list 更新Homebrew 更新Homebrew(此命令会显示可以更新的包列表，已安装的包会有对号)
brew update 列出可更新的包 # 不包含含自动更新的包 brew outdated # 含自动更新的包 brew cask outdated --greedy 安装更新 brew upgrade 清理旧版本 # 查看可清理的包列表 brew cleanup -n # 清理旧版本包 brew cleanup </description>
    </item>
    
    <item>
      <title>Windows KMS激活</title>
      <link>http://blog.ionosphere.site/p/20190813135420/</link>
      <pubDate>Tue, 13 Aug 2019 13:54:20 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20190813135420/</guid>
      <description>命令 # 查看系统激活状态 slmgr.vbs -xpr # 查看系统激活状态详细信息 slmgr.vbs -dlv # 安装产品密钥（企业版Key） slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX # 设置KMS服务器 slmgr /skms 192.168.31.57:1688 # 自动激活 slmgr /ato 密钥 W269N-WFGWX-YVC9B-4J6C9-T83GX 资源 KMS服务器</description>
    </item>
    
    <item>
      <title>拿到 [真·大师剑] 了</title>
      <link>http://blog.ionosphere.site/p/20181104031003/</link>
      <pubDate>Sun, 04 Nov 2018 03:10:03 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20181104031003/</guid>
      <description></description>
    </item>
    
    <item>
      <title>一种从天而降的棒法</title>
      <link>http://blog.ionosphere.site/p/20180916154907/</link>
      <pubDate>Sun, 16 Sep 2018 15:49:07 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20180916154907/</guid>
      <description></description>
    </item>
    
    <item>
      <title>目击了一条龙</title>
      <link>http://blog.ionosphere.site/p/20180914225833/</link>
      <pubDate>Fri, 14 Sep 2018 22:58:33 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20180914225833/</guid>
      <description></description>
    </item>
    
    <item>
      <title>西山国家森林公园灵山风景区</title>
      <link>http://blog.ionosphere.site/p/20180310210454/</link>
      <pubDate>Sat, 10 Mar 2018 21:04:54 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20180310210454/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Hugo测试</title>
      <link>http://blog.ionosphere.site/p/20180101233918/</link>
      <pubDate>Mon, 01 Jan 2018 23:39:18 +0800</pubDate>
      
      <guid>http://blog.ionosphere.site/p/20180101233918/</guid>
      <description>标题 代码块测试 // 修改主题根目录下config.json文件，增加Gitalk反向代理自定义配置节点，用于自定义配置代理地址 { &amp;#34;customConfig&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;gitalkProxy&amp;#34;, &amp;#34;label&amp;#34;: &amp;#34;GitHub登陆&amp;#34;, &amp;#34;group&amp;#34;: &amp;#34;Gitalk&amp;#34;, //此处将地址配置成自己的代理服务器 &amp;#34;value&amp;#34;: &amp;#34;https://netnr-proxy.cloudno.de/https://github.com/login/oauth/access_token&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;input&amp;#34;, &amp;#34;note&amp;#34;: &amp;#34;GitHub验证&amp;#34; } ] } 引用测试  白日依山尽，黄河入海流
 图片测试 </description>
    </item>
    
  </channel>
</rss>
