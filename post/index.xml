<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ionosphere</title>
    <link>https://blog.ionosphere.site/post/</link>
    <description>Recent content in Posts on Ionosphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Mar 2021 22:55:00 +0800</lastBuildDate><atom:link href="https://blog.ionosphere.site/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pro Git</title>
      <link>https://blog.ionosphere.site/p/a0fa4610/</link>
      <pubDate>Wed, 10 Mar 2021 22:55:00 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/a0fa4610/</guid>
      <description>1. 起步  本章为Git入门。主要讲解为什么Git这么流行，为什么要使用Git，Git如何设置
 1.1. 关于版本控制 记录一个或多个文件内容变化，以便将来阅读特定版本修订情况的系统即版本控制系统（VCS）。
1.1.1. 本地版本控制系统 本地版本控制系统大多都是采用某种简单的数据库来记录文件的历次更新差异，如图所示：
 
其中最流行的一种叫做RCS。RCS的工作原理是在硬盘上保存补丁集（补丁集是指文件修订前后的变化）；通过应用所有的补丁，可以重新计算出各个版本的文件内容。本地版本控制系统无法让不同系统上的开发者协同工作。
1.1.2. 集中化的版本控制系统 集中化版本控制系统（Centralized Version Control System，CVCS）很好的解决了本地版本控制系统不能让不同系统上的开发者协同工作的问题。CVCS模式：有一个单一的集中管理服务器，保存所有文件的修订版本，协同工作的人都通过客户端连接到这台服务器，取出最新文件或者提交更新。
 
CVCS的优点：1.项目参与者可以看到其他人在做什么。2.管理人员可以掌控每个参与者的权限。3.管理一个CVCS相较于在各个客户端维护本地数据库要简单。
CVCS的缺点：中央服务器故障后会影响所有人的工作。
典型的CVCS：CVS，Subversion，Perforce&amp;hellip;
1.1.3. 分布式版本控制系统 分布式版本控制系统（Distributed Version Control System，DVCS）中，客户端不仅仅提取最新版本的文件，还把代码仓库完整的镜像下来，包括完整的历史记录。在分布式版本控制系统中，任何一处服务器发生故障，事后都可以用任意一个镜像出来的本地仓库恢复。
 
典型的DVCS：Git，Mercurial，Bazaar，Darcs&amp;hellip;
1.2. Git的诞生 Linux开源社区的BitKeeper（一款DVCS）使用权到期了，他们只好去开发自己的版本控制系统😂，并且给新系统制定了若干目标：
 速度 简单的设计 对非线性开发模式的强力支持 完全分布式 有能力高效管理类似Linux内核一样的超大规模项目（速度和数据量）  Git是什么 </description>
    </item>
    
    <item>
      <title>Java核心技术·卷I</title>
      <link>https://blog.ionosphere.site/p/a8e95393/</link>
      <pubDate>Thu, 04 Mar 2021 23:27:31 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/a8e95393/</guid>
      <description>开始系统的学习Java基础知识
 第1章 Java程序设计概述 Java发展简史    版本 年份 语言新特性 类与接口的数量     1.0 1996 语言本身 211   1.1 1997 内部类 477   1.2 1998 strictfp修饰符 1524   1.3 2000 无 1840   1.4 2002 断言 2723   5.0 2004 泛型类、“for each”循环、可变元参数、自动装箱、元数据、枚举、静态导入 3279   6 2006 无 3793   7 2011 基于字符串的switch、钻石操作符、二进制字面量、异常处理改进 4024   8 2014 lambda表达式、包含默认方法的接口、流和日期/时间库 4240    注：当前已发布到版本16</description>
    </item>
    
    <item>
      <title>Markdown语法简单教程</title>
      <link>https://blog.ionosphere.site/p/b133175a/</link>
      <pubDate>Tue, 02 Mar 2021 11:59:39 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/b133175a/</guid>
      <description>写作时所有标记用的符号都要用英文，文章标点随意
  1. 标题 2. 列表  2.1. 无序列表 2.2. 有序列表   3. 引用 4. 文字强调  4.1. 粗体 4.2. 斜体 4.3. 下划线 4.4. 删除线   5. 分割线 6. 图片 7. 网址 8. 表格   1. 标题 语法 #加文字
# 一级标题 ## 二级标题 ### 三级标题 . . . ###### 六级标题 效果
 标题 
一般一级标题是文章的名称，所以在博客中的标题常从二级开始
 2. 列表 2.1. 无序列表 语法 -加空格加文字
- 列表1 - 列表1.</description>
    </item>
    
    <item>
      <title>留言</title>
      <link>https://blog.ionosphere.site/p/3c32f507/</link>
      <pubDate>Mon, 01 Mar 2021 09:38:52 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/3c32f507/</guid>
      <description>即将跳转到留言板&amp;hellip;如果未跳转请点击链接留言板
 window.location=&#39;https://support.qq.com/products/312496&#39;;   </description>
    </item>
    
    <item>
      <title>我的网抑云</title>
      <link>https://blog.ionosphere.site/p/music/</link>
      <pubDate>Thu, 25 Feb 2021 23:26:40 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/music/</guid>
      <description>  </description>
    </item>
    
    <item>
      <title>杭州市限行信息</title>
      <link>https://blog.ionosphere.site/p/7ecba2d8/</link>
      <pubDate>Thu, 25 Feb 2021 09:08:02 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/7ecba2d8/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>南阳市限行信息</title>
      <link>https://blog.ionosphere.site/p/2c7767a8/</link>
      <pubDate>Wed, 24 Feb 2021 20:07:13 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/2c7767a8/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>Hugo永久链接</title>
      <link>https://blog.ionosphere.site/p/da23b91d/</link>
      <pubDate>Wed, 24 Feb 2021 00:53:53 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/da23b91d/</guid>
      <description> 使用 hugo new 新建页面时创建的页面由 archetypes/default.md决定
 永久链接的生成方案是比较简单的，直接对时间 + 文章名生成字符串做一下 md5 然后取任意 4-12 位即可。这样做的话 md5 冲撞概率极小，同时也没有那么大的运算负担。而 Hugo 在永久链接中支持下面这个参数：slug。简单来说，我们可以针对每一篇文章指定一个 slug，然后在 config.toml 中配置 permalinks 包含 slug 参数，就可以生成唯一的永久链接。我们的目的就是对每篇文章自动生成一个 slug。
修改 archetypes/default.md 添加如下一行：
---#...slug:{{substr (md5 (printf &amp;#34;%s%s&amp;#34; .Date (replace .TranslationBaseName &amp;#34;-&amp;#34; &amp;#34; &amp;#34; | title))) 4 8 }}#...--- 参考：Hugo 永久链接
 </description>
    </item>
    
    <item>
      <title>二维码挪车牌</title>
      <link>https://blog.ionosphere.site/p/1a22f05b/</link>
      <pubDate>Tue, 23 Feb 2021 12:25:05 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/1a22f05b/</guid>
      <description>实现思路  在一个在线页面内实现拨号逻辑 生成步骤1中的页面地址对应的二维码 设计步骤2中二维码的样式，打印出来  拨号界面简单实现 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;renderer&amp;#34; content=&amp;#34;webkit&amp;#34;/&amp;gt; &amp;lt;meta name=&amp;#34;force-rendering&amp;#34; content=&amp;#34;webkit&amp;#34;/&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;keywords&amp;#34; content=&amp;#34;一键拨号&amp;#34;/&amp;gt; &amp;lt;meta name=&amp;#34;description&amp;#34; content=&amp;#34;方便、简单、实用&amp;#34;/&amp;gt; &amp;lt;title&amp;gt;联系我挪车&amp;lt;/title&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css&amp;#34;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div style=&amp;#34;text-align: center;margin-top:50px&amp;#34;&amp;gt; &amp;lt;h1&amp;gt;临时停车😊请多关照&amp;lt;/h1&amp;gt; &amp;lt;a href=&amp;#34;tel:{{手机号码}}&amp;#34; class=&amp;#34;btn btn-success btn-lg&amp;#34; style=&amp;#34;font-size:35px;margin-top:20px;&amp;#34;&amp;gt;挪车电话&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div style=&amp;#34;text-align: center;margin-top:50px&amp;#34;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;  页面的托管是很容易解决的，Gitee、GitHub都有提供pages服务，国内推荐用gitee
 优点  可定制性高 使用方便，换号方便 价格便宜  效果展示</description>
    </item>
    
    <item>
      <title>工具集</title>
      <link>https://blog.ionosphere.site/p/9c0b7f1d/</link>
      <pubDate>Mon, 22 Feb 2021 18:09:55 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/9c0b7f1d/</guid>
      <description>1. MacOS  1.1. 网络工具 1.2. 阅读 1.3. 图片相关 1.4. 文档处理 1.5. 博客 1.6. 镜像刻录 1.7. 下载器 1.8. 系统增强 1.9. 效率工具   2. Linux  2.1. 发行版   3. Android 4. 网站  1. MacOS 1.1. 网络工具 ZeroTier One - 组网工具
shadowsocks - 梯子
Charles - 网络分析
Postman - Web Api调试工具
1.2. 阅读 Kindle
calibre - 电子书工具
Knotes - Kindle笔记管理
Reeder - RSS阅读器
Maipo - 微博客户端
1.3. 图片相关 Affinity Photo - 专业</description>
    </item>
    
    <item>
      <title>Windows快捷键</title>
      <link>https://blog.ionosphere.site/p/a2e6bc04/</link>
      <pubDate>Mon, 22 Feb 2021 17:17:12 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/a2e6bc04/</guid>
      <description>说明 文章中的快捷键针对Windows10，其它版本Windows系统可能不生效
快捷键    键位 功能     ctrl+c 复制   ctrl+v 粘贴   ctrl+z 撤销   ctrl+a 全选   ctrl+s 保存   ctrl+x 剪切   ctrl+f 查找   ctrl+tab 切换浏览器、文件管理器等多标签软件标签页   ctrl+w 关闭浏览器、文件管理器等多标签软件的当前页面或单窗体软件   ctrl+shift+t 恢复刚关闭的浏览器页面   ctrl+t 创建一个新浏览器标签页   ctrl++ 放大（浏览器、图片浏览、桌面等处都可用）   ctrl+- 缩小（浏览器、图片浏览、桌面等处都可用）   ctrl+alt+delete 打开任务管理器界面   ctrl+p 打印当前文件       win+d 回到桌面（不论打开了多少窗体）   win+L 锁定电脑   win+e 打开文件管理器   win+m 最小化当前窗体   win+数字键 打开固定在任务栏对应顺序的应用    </description>
    </item>
    
    <item>
      <title>Gridea Gitalk 评论登录403问题</title>
      <link>https://blog.ionosphere.site/p/44c1c716/</link>
      <pubDate>Sat, 20 Feb 2021 17:59:56 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/44c1c716/</guid>
      <description>表象 成因 Gitalk默认的GitHub oauth请求反向代理CORS使用的是https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_tokenGitHub项目，该代理只是一个演示项目，由于被滥用，作者决定于2021年1月31日停止开放使用，从而导致了此问题的产生
解决  在Heroku上部署自己的cros-anywhere
   1.注册Heroku账号
  2.fork cros-anywhere项目
  3.创建Heroku应用
  4.将自己fork的项目部署创建的Heroku应用
官方文档 实际上自己通过网页端操作更方便点
  5.设置白名单防止滥用导致封号
  6.修改主题中Gitalk相关的代码 增加Gitalk反向代理配置项
  // 修改主题根目录下config.json文件，增加Gitalk反向代理自定义配置节点，用于自定义配置代理地址 { &amp;#34;customConfig&amp;#34;: [ { &amp;#34;name&amp;#34;: &amp;#34;gitalkProxy&amp;#34;, &amp;#34;label&amp;#34;: &amp;#34;GitHub登陆&amp;#34;, &amp;#34;group&amp;#34;: &amp;#34;Gitalk&amp;#34;, //此处将地址配置成自己的代理服务器 &amp;#34;value&amp;#34;: &amp;#34;https://netnr-proxy.cloudno.de/https://github.com/login/oauth/access_token&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;input&amp;#34;, &amp;#34;note&amp;#34;: &amp;#34;GitHub验证&amp;#34; } ] } 修改Gitalk初始化代码templates/includes/gitalk.ejs
&amp;lt;script&amp;gt; window.onload = function() { var gitalk = new Gitalk({ //增加代理参数，赋值读取自定义配置  proxy: &amp;#39;&amp;lt;%= site.customConfig.gitalkProxy %&amp;gt;&amp;#39;, clientID: &amp;#39;&amp;lt;%= commentSetting.</description>
    </item>
    
    <item>
      <title>Visual Studio Code 使用问题记录</title>
      <link>https://blog.ionosphere.site/p/41e58ada/</link>
      <pubDate>Sat, 06 Feb 2021 13:19:30 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/41e58ada/</guid>
      <description>Nuget包管理加载版本时报错 解决方案：
 打开.vscode/extensions/jmrog.vscode-nuget-package-manager-1.1.6/out/src/actions/add-methods/fetchPackageVersions.js， 修改代码 ...node_fetch_1.default(`${versionsUrl}${selectedPackageName.toLowerCase()}/index.json`, utils_1.getFetchOptions(vscode.workspace.getConfiguration(&amp;#39;http&amp;#39;)))   </description>
    </item>
    
    <item>
      <title>坐标系转换</title>
      <link>https://blog.ionosphere.site/p/2a125715/</link>
      <pubDate>Fri, 05 Feb 2021 13:13:42 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/2a125715/</guid>
      <description>#!/usr/bin/python3 # -*- coding: utf-8 -*- import json import requests import math key = &amp;#39;your key here&amp;#39; # 这里填写你的百度开放平台的key x_pi = 3.14159265358979324 * 3000.0 / 180.0 pi = 3.1415926535897932384626 # π a = 6378245.0 # 长半轴 ee = 0.00669342162296594323 # 扁率 def geocode(address): &amp;#34;&amp;#34;&amp;#34; 利用百度geocoding服务解析地址获取位置坐标 :param address:需要解析的地址 :return: &amp;#34;&amp;#34;&amp;#34; geocoding = {&amp;#39;s&amp;#39;: &amp;#39;rsv3&amp;#39;, &amp;#39;key&amp;#39;: key, &amp;#39;city&amp;#39;: &amp;#39;全国&amp;#39;, &amp;#39;address&amp;#39;: address} res = requests.get( &amp;#34;http://restapi.amap.com/v3/geocode/geo&amp;#34;, params=geocoding) if res.status_code == 200: json = res.</description>
    </item>
    
    <item>
      <title>Github&#43;PicGo&#43;jsdeliver搭建图床</title>
      <link>https://blog.ionosphere.site/p/4063f65b/</link>
      <pubDate>Thu, 04 Feb 2021 17:09:16 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/4063f65b/</guid>
      <description>实现步骤  整体逻辑：使用GitHub仓库作为存储空间，利用jsdeliver做CDN，利用PicGo做图片管理工具
 1. Github设置  创建公开仓库 创建私人访问Token,并将Token记录下来   注意：Token需要有repo、delete_repo权限
 2. PicGo设置 配置如下
资源 PicGo
jsDelivr</description>
    </item>
    
    <item>
      <title>Oracle定时备份</title>
      <link>https://blog.ionosphere.site/p/22637e0b/</link>
      <pubDate>Fri, 25 Dec 2020 14:38:32 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/22637e0b/</guid>
      <description>转载自：Windows下Oracle定时备份(全量备份)
 关于Windows下oracle全量备份的文章，很多网站都有，写下本文不过是为了以后方便查找，不用再到处找。以下些许内容有所参考到其他人所写内容，这里无意冒犯，本文引用内容部分会附上参考地址，还望原作者见谅。
1. 备份脚本 新建txt文档，把脚本复制进去后改文件格式为bat文件，双击运行即可测试该脚本是否有误。这里要说明一下，开始把脚本拿过来执行时，一直未能成功备份数据库,用bat的pause暂停调试发现了一些问题，有时不注意可能会在定义,变量如BACKUPDATE、USER等后面带了空格,这个时候问题就来了，导致参数的不正确，所以这里需注意！
@echo off echo ================================================ echo Windows环境下Oracle数据库的自动备份脚本 echo 1. 使用当前日期命名备份文件。 echo 2. 自动删除7天前的备份。 echo ================================================ echo 以“YYYYMMDD”格式取出当前时间。 set BACKUPDATE=%date:~0,4%%date:~5,2%%date:~8,2%%time:~0,2%%time:~3,2%%time:~6,2% echo 设置用户名、密码和要备份的数据库 set USER=ora_user set PASSWORD=ora_name set DATABASE=conn_db echo 创建备份目录 if not exist &amp;#34;E:\backup\data&amp;#34; mkdir E:\backup\data if not exist &amp;#34;E:\backup\log&amp;#34; mkdir E:\backup\log set DATADIR=E:\backup\data set LOGDIR=E:\backup\log exp %USER%/%PASSWORD%@%DATABASE% file=%DATADIR%\data_%BACKUPDATE%.dmp log=%LOGDIR%\log_%BACKUPDATE%.log echo 删除7天前的备份。 forfiles /p &amp;#34;%DATADIR%&amp;#34; /s /m *.* /d -7 /c &amp;#34;cmd /c del @path&amp;#34; forfiles /p &amp;#34;%LOGDIR%&amp;#34; /s /m *.</description>
    </item>
    
    <item>
      <title>文字转语音</title>
      <link>https://blog.ionosphere.site/p/0272ad7a/</link>
      <pubDate>Tue, 06 Oct 2020 13:48:54 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/0272ad7a/</guid>
      <description># 文字转语音 say -f 1.txt -o 1.aiff say 你好 -o 你好.aiff # 音频格式转换 ffmpeg -f aiff -i 你好.aiff 你好.mp3 </description>
    </item>
    
    <item>
      <title>黑神话·悟空</title>
      <link>https://blog.ionosphere.site/p/a39f146f/</link>
      <pubDate>Thu, 20 Aug 2020 11:26:07 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/a39f146f/</guid>
      <description></description>
    </item>
    
    <item>
      <title>今天天气很是不错...</title>
      <link>https://blog.ionosphere.site/p/4a241902/</link>
      <pubDate>Thu, 06 Aug 2020 21:35:01 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/4a241902/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Homebrew</title>
      <link>https://blog.ionosphere.site/p/319d5434/</link>
      <pubDate>Mon, 06 Jul 2020 13:46:40 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/319d5434/</guid>
      <description> Homebrew
 查看已安装的包 查看已经安装的包
brew list 更新Homebrew 更新Homebrew(此命令会显示可以更新的包列表，已安装的包会有对号)
brew update 列出可更新的包 # 不包含含自动更新的包 brew outdated # 含自动更新的包 brew cask outdated --greedy 安装更新 brew upgrade 清理旧版本 # 查看可清理的包列表 brew cleanup -n # 清理旧版本包 brew cleanup # 清理早于3天的无用的symlink，且清理与之相关的位于/Applications和~/Applications中的无用App链接 brew cleanup --prune 3 </description>
    </item>
    
    <item>
      <title>Windows KMS激活</title>
      <link>https://blog.ionosphere.site/p/acf0469c/</link>
      <pubDate>Tue, 13 Aug 2019 13:54:20 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/acf0469c/</guid>
      <description>命令 # 查看系统激活状态 slmgr.vbs -xpr # 查看系统激活状态详细信息 slmgr.vbs -dlv # 安装产品密钥（企业版Key） slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX # 设置KMS服务器 slmgr /skms 192.168.31.57:1688 # 自动激活 slmgr /ato 密钥 W269N-WFGWX-YVC9B-4J6C9-T83GX 资源 KMS服务器</description>
    </item>
    
    <item>
      <title>拿到 [真·大师剑] 了</title>
      <link>https://blog.ionosphere.site/p/14cff628/</link>
      <pubDate>Sun, 04 Nov 2018 03:10:03 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/14cff628/</guid>
      <description></description>
    </item>
    
    <item>
      <title>一种从天而降的棒法</title>
      <link>https://blog.ionosphere.site/p/0b3c6886/</link>
      <pubDate>Sun, 16 Sep 2018 15:49:07 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/0b3c6886/</guid>
      <description></description>
    </item>
    
    <item>
      <title>目击了一条龙</title>
      <link>https://blog.ionosphere.site/p/ca48c2fa/</link>
      <pubDate>Fri, 14 Sep 2018 22:58:33 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/ca48c2fa/</guid>
      <description></description>
    </item>
    
    <item>
      <title>西山国家森林公园灵山风景区</title>
      <link>https://blog.ionosphere.site/p/343d7f9e/</link>
      <pubDate>Sat, 10 Mar 2018 21:04:54 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/343d7f9e/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
