<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编程 on Ionosphere</title>
    <link>https://blog.ionosphere.site/categories/%E7%BC%96%E7%A8%8B/</link>
    <description>Recent content in 编程 on Ionosphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 06 Jul 2021 10:07:10 +0800</lastBuildDate><atom:link href="https://blog.ionosphere.site/categories/%E7%BC%96%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>用 Spring 创建 RESTful Web Service</title>
      <link>https://blog.ionosphere.site/p/96fc722c/</link>
      <pubDate>Tue, 06 Jul 2021 10:07:10 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/96fc722c/</guid>
      <description>目标 创建一个RESTful API。
实现 在IDEA中创建Spring项目  通过srping initializr来初始化项目 依赖项要增加spring web  创建 RESTful API @RestController public class IndexController { @RequestMapping(&amp;#34;/&amp;#34;) public String index() { return &amp;#34;hello, there&amp;#34;; } }    @RestController和@Controller注解的区别： 加@Controller注解的类里的每个方法都将返回一个视图页面；加@RestController注解则数据会以json/xml的形式返回前台页面；@Controller加@ResponseBody则与@RestController效果一样。加@RestController注解则不能返回jsp、html页面。
  @RequestMapping注解，在不指定请求谓词的情况下Post和Get都支持，可以通过method指定请求方式
@RequestMapping( method = RequestMethod.GET, // .post 　path = &amp;#34;/&amp;#34; ) 还可以直接通过@GetMapping(&amp;quot;/&amp;quot;)/@PostMapping(&amp;quot;/&amp;quot;)来制定请求方式和路由
   指定服务启动端口 修改src/main/resources/application.properties文件，通过server.port=*****来指定启动端口</description>
    </item>
    
    <item>
      <title>Mybatis分页</title>
      <link>https://blog.ionosphere.site/p/3f80e875/</link>
      <pubDate>Tue, 29 Jun 2021 10:05:24 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/3f80e875/</guid>
      <description> 插件项目地址：Mybatis-PageHelper
 </description>
    </item>
    
    <item>
      <title>Java项目中的classpath是什么</title>
      <link>https://blog.ionosphere.site/p/139dc015/</link>
      <pubDate>Mon, 28 Jun 2021 11:49:22 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/139dc015/</guid>
      <description>什么是classpath 一般情况下基于Maven的Java项目开发阶段目录结构：
src -main –java java源代码文件 –resources 资源库，会自动复制到classes目录里 –filters 资源过滤文件 –webapp web应用的目录。WEB-INF、css、js等 –test –java 单元测试java源代码文件 –resources 测试需要用的资源库 –filters 测试资源过滤库 –assembly 组件的描述配置（如何打包） –it 集成测试(主要用于插件) –site Site（一些文档） target pom.xml maven的pom文件 LICENSE.txt Project’s license README.txt Project’s readme 发布后的目录结构：
jar -META-INF -BOOT-INF -classes -lib 其中开发时期的src/main/下面的java和resources文件夹都被打包到了生产包的BOOT-INF/classes/目录下，由maven引入的依赖都被放入到了BOOT-INF/lib/下面。classpath指的就是BOOT-INF目录下的classes文件夹。
classpath的作用 classpath一般用于指定配置或者资源的路径，比如在配置mybatis的Mapper.xml文件位置时：
classpath*:**/mapper/mapping/*Mapper.xml classpath*表示可以匹配多个文件，路径中的**表示在BOOT-INF/classes/下的任意下层目录。</description>
    </item>
    
    <item>
      <title>关于Web Service</title>
      <link>https://blog.ionosphere.site/p/74cc3c3c/</link>
      <pubDate>Fri, 09 Apr 2021 12:03:53 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/74cc3c3c/</guid>
      <description>客户端终结点配置 &amp;lt;system.serviceModel&amp;gt; &amp;lt;bindings&amp;gt; &amp;lt;basicHttpBinding&amp;gt; &amp;lt;binding name=&amp;#34;MISServiceHttpBinding&amp;#34; maxBufferSize=&amp;#34;2147483647&amp;#34; maxReceivedMessageSize=&amp;#34;2147483647&amp;#34;/&amp;gt; &amp;lt;/basicHttpBinding&amp;gt; &amp;lt;/bindings&amp;gt; &amp;lt;client&amp;gt; ... &amp;lt;/client&amp;gt; &amp;lt;/system.serviceModel&amp;gt; </description>
    </item>
    
    <item>
      <title>坐标系转换</title>
      <link>https://blog.ionosphere.site/p/2a125715/</link>
      <pubDate>Fri, 05 Feb 2021 13:13:42 +0800</pubDate>
      
      <guid>https://blog.ionosphere.site/p/2a125715/</guid>
      <description>#!/usr/bin/python3 # -*- coding: utf-8 -*- import json import requests import math key = &amp;#39;your key here&amp;#39; # 这里填写你的百度开放平台的key x_pi = 3.14159265358979324 * 3000.0 / 180.0 pi = 3.1415926535897932384626 # π a = 6378245.0 # 长半轴 ee = 0.00669342162296594323 # 扁率 def geocode(address): &amp;#34;&amp;#34;&amp;#34; 利用百度geocoding服务解析地址获取位置坐标 :param address:需要解析的地址 :return: &amp;#34;&amp;#34;&amp;#34; geocoding = {&amp;#39;s&amp;#39;: &amp;#39;rsv3&amp;#39;, &amp;#39;key&amp;#39;: key, &amp;#39;city&amp;#39;: &amp;#39;全国&amp;#39;, &amp;#39;address&amp;#39;: address} res = requests.get( &amp;#34;http://restapi.amap.com/v3/geocode/geo&amp;#34;, params=geocoding) if res.status_code == 200: json = res.</description>
    </item>
    
  </channel>
</rss>
